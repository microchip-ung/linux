/* SPDX-License-Identifier: (GPL-2.0 OR MIT) */
/*
 * Microchip LAN966x Switch driver
 *
 * License: Dual MIT/GPL
 * Copyright (c) 2020 Microchip Technology Inc.
 */

/* This file is autogenerated by cml-utils 2021-02-04 13:07:36 +0100.
 * Commit ID: 0359c23857fee4dc44d5a77219b74b8cb979e0c1 (dirty)
 */

#ifndef _LAN966X_FDMA_REGS_SR_H_
#define _LAN966X_FDMA_REGS_SR_H_

#include <linux/bitops.h>

#define LAN966X_BUILD_ID_REG GCB_BUILDID
#define LAN966X_BUILD_ID 1610532836

enum lan966x_target {
	TARGET_FDMA = 19,
	NUM_TARGETS = 65
};

#define __REG(...)    __VA_ARGS__

/*      FDMA:FDMA:CH_ACTIVATE */
#define FDMA_CH_ACTIVATE          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 0, 0, 1, 4)

#define FDMA_CH_ACTIVATE_CH_ACTIVATE(x)          ((x) & GENMASK(7, 0))
#define FDMA_CH_ACTIVATE_CH_ACTIVATE_M           GENMASK(7, 0)
#define FDMA_CH_ACTIVATE_CH_ACTIVATE_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_RELOAD */
#define FDMA_CH_RELOAD            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 4, 0, 1, 4)

#define FDMA_CH_RELOAD_CH_RELOAD(x)              ((x) & GENMASK(7, 0))
#define FDMA_CH_RELOAD_CH_RELOAD_M               GENMASK(7, 0)
#define FDMA_CH_RELOAD_CH_RELOAD_X(x)            ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_DISABLE */
#define FDMA_CH_DISABLE           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 8, 0, 1, 4)

#define FDMA_CH_DISABLE_CH_DISABLE(x)            ((x) & GENMASK(7, 0))
#define FDMA_CH_DISABLE_CH_DISABLE_M             GENMASK(7, 0)
#define FDMA_CH_DISABLE_CH_DISABLE_X(x)          ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_FORCEDIS */
#define FDMA_CH_FORCEDIS          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 12, 0, 1, 4)

#define FDMA_CH_FORCEDIS_CH_FORCEDIS(x)          ((x) & GENMASK(7, 0))
#define FDMA_CH_FORCEDIS_CH_FORCEDIS_M           GENMASK(7, 0)
#define FDMA_CH_FORCEDIS_CH_FORCEDIS_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_DB_DISCARD */
#define FDMA_CH_DB_DISCARD        __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 16, 0, 1, 4)

#define FDMA_CH_DB_DISCARD_DB_DISCARD(x)         ((x) & GENMASK(7, 0))
#define FDMA_CH_DB_DISCARD_DB_DISCARD_M          GENMASK(7, 0)
#define FDMA_CH_DB_DISCARD_DB_DISCARD_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_CNT */
#define FDMA_CH_CNT(r)            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 20, r, 8, 4)

#define FDMA_CH_CNT_CH_CNT_FRM(x)                (((x) << 16) & GENMASK(31, 16))
#define FDMA_CH_CNT_CH_CNT_FRM_M                 GENMASK(31, 16)
#define FDMA_CH_CNT_CH_CNT_FRM_X(x)              (((x) & GENMASK(31, 16)) >> 16)

#define FDMA_CH_CNT_CH_CNT_DB_INTR(x)            (((x) << 8) & GENMASK(15, 8))
#define FDMA_CH_CNT_CH_CNT_DB_INTR_M             GENMASK(15, 8)
#define FDMA_CH_CNT_CH_CNT_DB_INTR_X(x)          (((x) & GENMASK(15, 8)) >> 8)

#define FDMA_CH_CNT_CH_CNT_DCB(x)                ((x) & GENMASK(7, 0))
#define FDMA_CH_CNT_CH_CNT_DCB_M                 GENMASK(7, 0)
#define FDMA_CH_CNT_CH_CNT_DCB_X(x)              ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:DCB_LLP */
#define FDMA_DCB_LLP(r)           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 52, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP1 */
#define FDMA_DCB_LLP1(r)          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 84, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP_PREV */
#define FDMA_DCB_LLP_PREV(r)      __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 116, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP_PREV1 */
#define FDMA_DCB_LLP_PREV1(r)     __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 148, r, 8, 4)

/*      FDMA:FDMA:CH_ACTIVE */
#define FDMA_CH_ACTIVE            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 180, 0, 1, 4)

#define FDMA_CH_ACTIVE_CH_ACTIVE(x)              ((x) & GENMASK(7, 0))
#define FDMA_CH_ACTIVE_CH_ACTIVE_M               GENMASK(7, 0)
#define FDMA_CH_ACTIVE_CH_ACTIVE_X(x)            ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_PENDING */
#define FDMA_CH_PENDING           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 184, 0, 1, 4)

#define FDMA_CH_PENDING_CH_PENDING(x)            ((x) & GENMASK(7, 0))
#define FDMA_CH_PENDING_CH_PENDING_M             GENMASK(7, 0)
#define FDMA_CH_PENDING_CH_PENDING_X(x)          ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_IDLE */
#define FDMA_CH_IDLE              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 188, 0, 1, 4)

#define FDMA_CH_IDLE_CH_IDLE(x)                  ((x) & GENMASK(7, 0))
#define FDMA_CH_IDLE_CH_IDLE_M                   GENMASK(7, 0)
#define FDMA_CH_IDLE_CH_IDLE_X(x)                ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_STATUS */
#define FDMA_CH_STATUS(r)         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 192, r, 8, 4)

#define FDMA_CH_STATUS_CH_FILL_LVL(x)            (((x) << 2) & GENMASK(5, 2))
#define FDMA_CH_STATUS_CH_FILL_LVL_M             GENMASK(5, 2)
#define FDMA_CH_STATUS_CH_FILL_LVL_X(x)          (((x) & GENMASK(5, 2)) >> 2)

#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX(x)  ((x) & GENMASK(1, 0))
#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX_M   GENMASK(1, 0)
#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX_X(x) ((x) & GENMASK(1, 0))

/*      FDMA:FDMA:CH_CFG */
#define FDMA_CH_CFG(r)            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 224, r, 8, 4)

#define FDMA_CH_CFG_CH_XTR_STATUS_MODE(x)        (((x) << 5) & GENMASK(5, 5))
#define FDMA_CH_CFG_CH_XTR_STATUS_MODE_M         GENMASK(5, 5)
#define FDMA_CH_CFG_CH_XTR_STATUS_MODE_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY(x)       (((x) << 4) & GENMASK(4, 4))
#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY_M        GENMASK(4, 4)
#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY_X(x)     (((x) & GENMASK(4, 4)) >> 4)

#define FDMA_CH_CFG_CH_INJ_PORT(x)               (((x) << 3) & GENMASK(3, 3))
#define FDMA_CH_CFG_CH_INJ_PORT_M                GENMASK(3, 3)
#define FDMA_CH_CFG_CH_INJ_PORT_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define FDMA_CH_CFG_CH_DCB_DB_CNT(x)             (((x) << 1) & GENMASK(2, 1))
#define FDMA_CH_CFG_CH_DCB_DB_CNT_M              GENMASK(2, 1)
#define FDMA_CH_CFG_CH_DCB_DB_CNT_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define FDMA_CH_CFG_CH_MEM(x)                    ((x) & GENMASK(0, 0))
#define FDMA_CH_CFG_CH_MEM_M                     GENMASK(0, 0)
#define FDMA_CH_CFG_CH_MEM_X(x)                  ((x) & GENMASK(0, 0))

/*      FDMA:FDMA:CH_TRANSLATE */
#define FDMA_CH_TRANSLATE(r)      __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 256, r, 8, 4)

#define FDMA_CH_TRANSLATE_OFFSET(x)              ((x) & GENMASK(15, 0))
#define FDMA_CH_TRANSLATE_OFFSET_M               GENMASK(15, 0)
#define FDMA_CH_TRANSLATE_OFFSET_X(x)            ((x) & GENMASK(15, 0))

/*      FDMA:FDMA:CH_INJ_TOKEN_CNT */
#define FDMA_CH_INJ_TOKEN_CNT(r)  __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 288, r, 6, 4)

#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT(x) ((x) & GENMASK(7, 0))
#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT_M GENMASK(7, 0)
#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT_X(x) ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_INJ_TOKEN_TICK_RLD */
#define FDMA_CH_INJ_TOKEN_TICK_RLD(r) __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 312, r, 6, 4)

/*      FDMA:FDMA:CH_INJ_TOKEN_TICK_CNT */
#define FDMA_CH_INJ_TOKEN_TICK_CNT(r) __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 336, r, 6, 4)

/*      FDMA:FDMA:INJ_CFG */
#define FDMA_INJ_CFG              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 360, 0, 1, 4)

#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD(x)     (((x) << 11) & GENMASK(14, 11))
#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD_M      GENMASK(14, 11)
#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD_X(x)   (((x) & GENMASK(14, 11)) >> 11)

#define FDMA_INJ_CFG_INJ_ARB_SAT(x)              ((x) & GENMASK(10, 0))
#define FDMA_INJ_CFG_INJ_ARB_SAT_M               GENMASK(10, 0)
#define FDMA_INJ_CFG_INJ_ARB_SAT_X(x)            ((x) & GENMASK(10, 0))

/*      FDMA:FDMA:XTR_CFG */
#define FDMA_XTR_CFG              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 364, 0, 1, 4)

#define FDMA_XTR_CFG_XTR_FIFO_WM(x)              (((x) << 11) & GENMASK(15, 11))
#define FDMA_XTR_CFG_XTR_FIFO_WM_M               GENMASK(15, 11)
#define FDMA_XTR_CFG_XTR_FIFO_WM_X(x)            (((x) & GENMASK(15, 11)) >> 11)

#define FDMA_XTR_CFG_XTR_ARB_SAT(x)              ((x) & GENMASK(10, 0))
#define FDMA_XTR_CFG_XTR_ARB_SAT_M               GENMASK(10, 0)
#define FDMA_XTR_CFG_XTR_ARB_SAT_X(x)            ((x) & GENMASK(10, 0))

/*      FDMA:FDMA:PORT_CFG */
#define FDMA_PORT_CFG(r)          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 368, r, 2, 4)

#define FDMA_PORT_CFG_INJ_FCS_PAD_EN(x)          (((x) << 8) & GENMASK(8, 8))
#define FDMA_PORT_CFG_INJ_FCS_PAD_EN_M           GENMASK(8, 8)
#define FDMA_PORT_CFG_INJ_FCS_PAD_EN_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN(x)         ((x) & GENMASK(7, 0))
#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN_M          GENMASK(7, 0)
#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:PORT_CTRL */
#define FDMA_PORT_CTRL(r)         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 376, r, 2, 4)

#define FDMA_PORT_CTRL_INJ_STOP(x)               (((x) << 4) & GENMASK(4, 4))
#define FDMA_PORT_CTRL_INJ_STOP_M                GENMASK(4, 4)
#define FDMA_PORT_CTRL_INJ_STOP_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define FDMA_PORT_CTRL_INJ_STOP_FORCE(x)         (((x) << 3) & GENMASK(3, 3))
#define FDMA_PORT_CTRL_INJ_STOP_FORCE_M          GENMASK(3, 3)
#define FDMA_PORT_CTRL_INJ_STOP_FORCE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FDMA_PORT_CTRL_XTR_STOP(x)               (((x) << 2) & GENMASK(2, 2))
#define FDMA_PORT_CTRL_XTR_STOP_M                GENMASK(2, 2)
#define FDMA_PORT_CTRL_XTR_STOP_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY(x)       (((x) << 1) & GENMASK(1, 1))
#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY_M        GENMASK(1, 1)
#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define FDMA_PORT_CTRL_XTR_BUF_RST(x)            ((x) & GENMASK(0, 0))
#define FDMA_PORT_CTRL_XTR_BUF_RST_M             GENMASK(0, 0)
#define FDMA_PORT_CTRL_XTR_BUF_RST_X(x)          ((x) & GENMASK(0, 0))

/*      FDMA:FDMA:INTR_DCB */
#define FDMA_INTR_DCB             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 384, 0, 1, 4)

#define FDMA_INTR_DCB_INTR_DCB(x)                ((x) & GENMASK(7, 0))
#define FDMA_INTR_DCB_INTR_DCB_M                 GENMASK(7, 0)
#define FDMA_INTR_DCB_INTR_DCB_X(x)              ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DCB_ENA */
#define FDMA_INTR_DCB_ENA         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 388, 0, 1, 4)

#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA(x)        ((x) & GENMASK(7, 0))
#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA_M         GENMASK(7, 0)
#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA_X(x)      ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DB */
#define FDMA_INTR_DB              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 392, 0, 1, 4)

#define FDMA_INTR_DB_INTR_DB(x)                  ((x) & GENMASK(7, 0))
#define FDMA_INTR_DB_INTR_DB_M                   GENMASK(7, 0)
#define FDMA_INTR_DB_INTR_DB_X(x)                ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DB_ENA */
#define FDMA_INTR_DB_ENA          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 396, 0, 1, 4)

#define FDMA_INTR_DB_ENA_INTR_DB_ENA(x)          ((x) & GENMASK(7, 0))
#define FDMA_INTR_DB_ENA_INTR_DB_ENA_M           GENMASK(7, 0)
#define FDMA_INTR_DB_ENA_INTR_DB_ENA_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_ERR */
#define FDMA_INTR_ERR             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 400, 0, 1, 4)

#define FDMA_INTR_ERR_INTR_PORT_ERR(x)           (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_ERR_INTR_PORT_ERR_M            GENMASK(9, 8)
#define FDMA_INTR_ERR_INTR_PORT_ERR_X(x)         (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_ERR_INTR_CH_ERR(x)             ((x) & GENMASK(7, 0))
#define FDMA_INTR_ERR_INTR_CH_ERR_M              GENMASK(7, 0)
#define FDMA_INTR_ERR_INTR_CH_ERR_X(x)           ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_ENA */
#define FDMA_INTR_ENA             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 404, 0, 1, 4)

#define FDMA_INTR_ENA_INTR_PORT_ENA(x)           (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_ENA_INTR_PORT_ENA_M            GENMASK(9, 8)
#define FDMA_INTR_ENA_INTR_PORT_ENA_X(x)         (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_ENA_INTR_CH_ENA(x)             ((x) & GENMASK(7, 0))
#define FDMA_INTR_ENA_INTR_CH_ENA_M              GENMASK(7, 0)
#define FDMA_INTR_ENA_INTR_CH_ENA_X(x)           ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_IDENT */
#define FDMA_INTR_IDENT           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 408, 0, 1, 4)

#define FDMA_INTR_IDENT_INTR_PORT_IDENT(x)       (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_IDENT_INTR_PORT_IDENT_M        GENMASK(9, 8)
#define FDMA_INTR_IDENT_INTR_PORT_IDENT_X(x)     (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_IDENT_INTR_CH_IDENT(x)         ((x) & GENMASK(7, 0))
#define FDMA_INTR_IDENT_INTR_CH_IDENT_M          GENMASK(7, 0)
#define FDMA_INTR_IDENT_INTR_CH_IDENT_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:ERRORS */
#define FDMA_ERRORS               __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 412, 0, 1, 4)

#define FDMA_ERRORS_ERR_XTR_WR(x)                (((x) << 30) & GENMASK(31, 30))
#define FDMA_ERRORS_ERR_XTR_WR_M                 GENMASK(31, 30)
#define FDMA_ERRORS_ERR_XTR_WR_X(x)              (((x) & GENMASK(31, 30)) >> 30)

#define FDMA_ERRORS_ERR_XTR_OVF(x)               (((x) << 28) & GENMASK(29, 28))
#define FDMA_ERRORS_ERR_XTR_OVF_M                GENMASK(29, 28)
#define FDMA_ERRORS_ERR_XTR_OVF_X(x)             (((x) & GENMASK(29, 28)) >> 28)

#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF(x)        (((x) << 26) & GENMASK(27, 26))
#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF_M         GENMASK(27, 26)
#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF_X(x)      (((x) & GENMASK(27, 26)) >> 26)

#define FDMA_ERRORS_ERR_DCB_XTR_DATAL(x)         (((x) << 24) & GENMASK(25, 24))
#define FDMA_ERRORS_ERR_DCB_XTR_DATAL_M          GENMASK(25, 24)
#define FDMA_ERRORS_ERR_DCB_XTR_DATAL_X(x)       (((x) & GENMASK(25, 24)) >> 24)

#define FDMA_ERRORS_ERR_DCB_RD(x)                (((x) << 16) & GENMASK(23, 16))
#define FDMA_ERRORS_ERR_DCB_RD_M                 GENMASK(23, 16)
#define FDMA_ERRORS_ERR_DCB_RD_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define FDMA_ERRORS_ERR_INJ_RD(x)                (((x) << 10) & GENMASK(15, 10))
#define FDMA_ERRORS_ERR_INJ_RD_M                 GENMASK(15, 10)
#define FDMA_ERRORS_ERR_INJ_RD_X(x)              (((x) & GENMASK(15, 10)) >> 10)

#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC(x)       (((x) << 8) & GENMASK(9, 8))
#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC_M        GENMASK(9, 8)
#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC_X(x)     (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_ERRORS_ERR_CH_WR(x)                 ((x) & GENMASK(7, 0))
#define FDMA_ERRORS_ERR_CH_WR_M                  GENMASK(7, 0)
#define FDMA_ERRORS_ERR_CH_WR_X(x)               ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:ERRORS_2 */
#define FDMA_ERRORS_2             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 416, 0, 1, 4)

#define FDMA_ERRORS_2_ERR_XTR_FRAG(x)            ((x) & GENMASK(1, 0))
#define FDMA_ERRORS_2_ERR_XTR_FRAG_M             GENMASK(1, 0)
#define FDMA_ERRORS_2_ERR_XTR_FRAG_X(x)          ((x) & GENMASK(1, 0))

/*      FDMA:FDMA:IDLECNT */
#define FDMA_IDLECNT              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 420, 0, 1, 4)

#define FDMA_IDLECNT_IDLECNT(x)                  ((x) & GENMASK(23, 0))
#define FDMA_IDLECNT_IDLECNT_M                   GENMASK(23, 0)
#define FDMA_IDLECNT_IDLECNT_X(x)                ((x) & GENMASK(23, 0))

/*      FDMA:FDMA:CTRL */
#define FDMA_CTRL                 __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 424, 0, 1, 4)

#define FDMA_CTRL_NRESET(x)                      ((x) & GENMASK(0, 0))
#define FDMA_CTRL_NRESET_M                       GENMASK(0, 0)
#define FDMA_CTRL_NRESET_X(x)                    ((x) & GENMASK(0, 0))

/*      FDMA:FDMA_HA:PORT_STAT */
#define FDMA_PORT_STAT(r)         __REG(TARGET_FDMA,\
					0, 1, 0, 0, 1, 8, 0, r, 2, 4)

#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT(x)       ((x) & GENMASK(15, 0))
#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT_M        GENMASK(15, 0)
#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT_X(x)     ((x) & GENMASK(15, 0))

#endif /* _LAN966X_FDMA_REGS_SR_H_ */

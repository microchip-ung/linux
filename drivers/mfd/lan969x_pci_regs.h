/* SPDX-License-Identifier: (GPL-2.0 OR MIT) */
/*
 * Microchip LAN969x Switch driver
 *
 * License: Dual MIT/GPL
 * Copyright (c) 2023 Microchip Technology Inc.
 */

/* This file is autogenerated by cml-utils 2023-10-30 16:42:25 +0100.
 * Commit ID: e99995c162f4b34bae7b9c7fb8027925e7bf9f25
 */

#ifndef LAN969X_PCI_REGS_H
#define LAN969X_PCI_REGS_H

#include <linux/bitops.h>

#define LAN969X_BUILD_ID_REG GCB_BUILDID
enum lan969x_target {
	TARGET_CPU = 13,
	TARGET_GCB = 72,
	NUM_TARGETS = 185
};

#define __REG(...)    __VA_ARGS__

/*      CPU:INTR:INTR_TRIGGER */
#define CPU_INTR_TRIGGER(r)       __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 16, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER1 */
#define CPU_INTR_TRIGGER1(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 24, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER2 */
#define CPU_INTR_TRIGGER2(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 32, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER3 */
#define CPU_INTR_TRIGGER3(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 40, r, 2, 4)

/*      CPU:INTR:INTR_STICKY */
#define CPU_INTR_STICKY           __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 64, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY1 */
#define CPU_INTR_STICKY1          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 68, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY2 */
#define CPU_INTR_STICKY2          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 72, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY3 */
#define CPU_INTR_STICKY3          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 76, 0, 1, 4)

/*      CPU:INTR:INTR_ENA */
#define CPU_INTR_ENA              __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 96, 0, 1, 4)

/*      CPU:INTR:INTR_ENA1 */
#define CPU_INTR_ENA1             __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 100, 0, 1, 4)

/*      CPU:INTR:INTR_ENA2 */
#define CPU_INTR_ENA2             __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 104, 0, 1, 4)

/*      CPU:INTR:INTR_ENA3 */
#define CPU_INTR_ENA3             __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 108, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR */
#define CPU_INTR_ENA_CLR          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 112, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR1 */
#define CPU_INTR_ENA_CLR1         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 116, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR2 */
#define CPU_INTR_ENA_CLR2         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 120, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR3 */
#define CPU_INTR_ENA_CLR3         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 124, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET */
#define CPU_INTR_ENA_SET          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 128, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET1 */
#define CPU_INTR_ENA_SET1         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 132, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET2 */
#define CPU_INTR_ENA_SET2         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 136, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET3 */
#define CPU_INTR_ENA_SET3         __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 140, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT */
#define CPU_INTR_IDENT            __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 144, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT1 */
#define CPU_INTR_IDENT1           __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 148, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT2 */
#define CPU_INTR_IDENT2           __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 152, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT3 */
#define CPU_INTR_IDENT3           __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 156, 0, 1, 4)

/*      CPU:INTR:DST_INTR_MAP */
#define CPU_DST_INTR_MAP(r)       __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 160, r, 7, 4)

/*      CPU:INTR:DST_INTR_MAP1 */
#define CPU_DST_INTR_MAP1(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 188, r, 7, 4)

/*      CPU:INTR:DST_INTR_MAP2 */
#define CPU_DST_INTR_MAP2(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 216, r, 7, 4)

/*      CPU:INTR:DST_INTR_MAP3 */
#define CPU_DST_INTR_MAP3(r)      __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 244, r, 7, 4)

/*      CPU:INTR:DST_INTR_IDENT */
#define CPU_DST_INTR_IDENT(r)     __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 272, r, 7, 4)

/*      CPU:INTR:DST_INTR_IDENT1 */
#define CPU_DST_INTR_IDENT1(r)    __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 300, r, 7, 4)

/*      CPU:INTR:DST_INTR_IDENT2 */
#define CPU_DST_INTR_IDENT2(r)    __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 328, r, 7, 4)

/*      CPU:INTR:DST_INTR_IDENT3 */
#define CPU_DST_INTR_IDENT3(r)    __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 356, r, 7, 4)

/*      CPU:INTR:DEV_INTR_TRIGGER */
#define CPU_DEV_INTR_TRIGGER(r)   __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 404, r, 2, 4)

#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER(x) ((x) & GENMASK(29U, 0U))
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_M GENMASK(29U, 0U)
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_X(x) ((x) & GENMASK(29U, 0U))

/*      CPU:INTR:DEV_INTR_STICKY */
#define CPU_DEV_INTR_STICKY       __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 412, 0, 1, 4)

#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY(x) ((x) & GENMASK(29U, 0U))
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_M GENMASK(29U, 0U)
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_X(x) ((x) & GENMASK(29U, 0U))

/*      CPU:INTR:DEV_INTR_ENA */
#define CPU_DEV_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 420, 0, 1, 4)

#define CPU_DEV_INTR_ENA_DEV_INTR_ENA(x)    ((x) & GENMASK(29U, 0U))
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_M     GENMASK(29U, 0U)
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_X(x)  ((x) & GENMASK(29U, 0U))

/*      CPU:INTR:DEV_INTR_IDENT */
#define CPU_DEV_INTR_IDENT        __REG(TARGET_CPU,\
					0, 1, 296, 0, 1, 452, 424, 0, 1, 4)

#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT(x) ((x) & GENMASK(29U, 0U))
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_M GENMASK(29U, 0U)
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_X(x) ((x) & GENMASK(29U, 0U))

/*      GCB:CHIP_REGS:CHIP_ID */
#define GCB_CHIP_ID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 180, 0, 0, 1, 4)

#define GCB_CHIP_ID_REV_ID(x)               (((x) << 28U) & GENMASK(31U, 28U))
#define GCB_CHIP_ID_REV_ID_M                GENMASK(31U, 28U)
#define GCB_CHIP_ID_REV_ID_X(x)             (((x) & GENMASK(31U, 28U)) >> 28U)

#define GCB_CHIP_ID_PART_ID(x)              (((x) << 12U) & GENMASK(27U, 12U))
#define GCB_CHIP_ID_PART_ID_M               GENMASK(27U, 12U)
#define GCB_CHIP_ID_PART_ID_X(x)            (((x) & GENMASK(27U, 12U)) >> 12U)

#define GCB_CHIP_ID_MFG_ID(x)               (((x) << 1U) & GENMASK(11U, 1U))
#define GCB_CHIP_ID_MFG_ID_M                GENMASK(11U, 1U)
#define GCB_CHIP_ID_MFG_ID_X(x)             (((x) & GENMASK(11U, 1U)) >> 1U)

#define GCB_CHIP_ID_ONE(x)                  ((x) & GENMASK(0U, 0U))
#define GCB_CHIP_ID_ONE_M                   GENMASK(0U, 0U)
#define GCB_CHIP_ID_ONE_X(x)                ((x) & GENMASK(0U, 0U))

#endif /* LAN969X_PCI_REGS_H */
